<?php

/**
 * @file
 * Core functionality for Tour UI module.
 */

use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_permission.
 */
function tour_ui_permission() {
  return array(
    'administer tour' => array(
      'title' => t('Administer tour'),
      'description' => t('Perform administration tasks on tour module.'),
    ),
  );
}

/**
 * Implements hook_entity_info().
 */
function tour_ui_entity_info(&$entity_info) {
  $entity_info['tour']['controllers']['list'] = 'Drupal\tour_ui\TourListController';
  $entity_info['tour']['controllers']['form']['default'] = 'Drupal\tour_ui\TourFormController';
  $entity_info['tour']['controllers']['form']['tips'] = 'Drupal\tour_ui\TourTipFormController';
  $entity_info['tour']['controllers']['form']['add'] = 'Drupal\tour_ui\TourTipFormController';
  $entity_info['tour']['controllers']['form']['edit'] = 'Drupal\tour_ui\TourTipFormController';
  $entity_info['tour']['controllers']['form']['delete'] = 'Drupal\tour_ui\TourTipDeleteForm';
  $entity_info['tour']['uri_callback'] = 'tour_ui_uri';
}

function tour_ui_entity_info_alter(&$entity_info) {
  $entity_info['tour']['links']['edit-form'] = 'admin/config/user-interface/tour/manage/{id}';
}

/**
 * Implements hook_entity_access().
 *
 * TODO: This hook is not defined on d.o yet.
 *   check for its arguments
 *
 *
 * @param type $bc_entity
 * @param type $operation
 * @param type $account
 * @param type $langcode
 * @return boolean
 *
 * @see EntityAccessController::access()
 * @see EntityAccessControllerInterface::access()
 */
function tour_ui_tour_access($bc_entity, $operation, $account, $langcode) {
  $account->hasPermission('administer tour');
}

/**
 * Implements hook_menu().
 */
function tour_ui_menu() {
  $items['admin/config/user-interface/tour'] = array(
    'title' => 'Tour',
    'description' => 'Add and modify guided tours.',
    'route_name' => 'tour_ui_listing',
  );
  $items['admin/config/user-interface/tour/add'] = array(
    'title' => 'Add tour',
    'type' => MENU_LOCAL_ACTION,
    'route_name' => 'tour_ui_add',
  );
  $items['admin/config/user-interface/tour/manage/%/edit'] = array(
    'title' => 'Edit tour',
    'route_name' => 'tour_ui_edit',
  );
  $items['admin/config/user-interface/tour/manage/%/delete'] = array(
    'title' => 'Delete tour',
    'route_name' => 'tour_ui_delete',
  );
  $items['admin/config/user-interface/tour/manage/%/tip/add/%'] = array(
    'title' => 'Add tour tip',
    'route_name' => 'tour_ui_tip_add',
  );
  $items['admin/config/user-interface/tour/manage/%/tip/edit/%'] = array(
    'title' => 'Edit tour tip',
    'route_name' => 'tour_ui_tip_edit',
  );
  $items['admin/config/user-interface/tour/manage/%/tip/delete/%'] = array(
    'title' => 'Edit tour tip',
    'route_name' => 'tour_ui_tip_delete',
  );
  return $items;
}

/**
 * Callback for the entity URI.
 */
function tour_ui_uri(EntityInterface $entity) {
  return array(
    'path' => 'admin/config/user-interface/tour/manage/' . $entity->id,
    'options' => array(
      'entity_type' => $entity->entityType(),
      'entity' => $entity,
    ),
  );
}

/**
 * Callback for machine_name exists.
 */
function _tour_load($tour) {
  return entity_load('tour', $tour);
}

/**
 * Implements hook_tour_tips_info_alter().
 */
function tour_ui_tour_tips_info_alter(&$info) {
  // Override the core text plugin.
  $info['text']['class'] = 'Drupal\tour_ui\Plugin\tour\tip\TipPluginTextExtended';
}
